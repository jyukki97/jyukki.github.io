<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>힙 - 标签 - JYUKKI&#39;s BLOG</title>
        <link>https://jyukki97.github.io/tags/%ED%9E%99/</link>
        <description>힙 - 标签 - JYUKKI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 26 Feb 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://jyukki97.github.io/tags/%ED%9E%99/" rel="self" type="application/rss+xml" /><item>
    <title>[백준]11286 절댓값 힘</title>
    <link>https://jyukki97.github.io/2020-02-26-11286/</link>
    <pubDate>Wed, 26 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://jyukki97.github.io/2020-02-26-11286/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/11286
풀이: 0이 나온다면, 배열에 있는 값중 절댓값이 가장 작은 값을 출력한다.(절댓값이 같다면, 가장 작은 값을 출력한다.) 그 값을 배열에서 제외시킨다.
만약 배열이 비어있다면, 0을 출력한다.
0이 아닌 다른 숫자가 나온다면, 그 값을 배열에 넣는다.
cout, cin 을 사용하면, 시간초과가 나므로 주의하자. 코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  #include &lt;iostream&gt;#include &lt;queue&gt;using namespace std; int n, i, m; bool com(int a, int b) { if (abs(a) == abs(b)) return a &gt; b; return abs(a) &gt; abs(b); } int main() { priority_queue&lt;int, vector&lt;int&gt;, decltype(&amp;com)&gt; a(&amp;com); scanf(&#34;%d&#34;, &amp;n); for (i = 0; i &lt; n; i++) { scanf(&#34;%d&#34;, &amp;m); if (!]]></description>
</item><item>
    <title>[백준]1655 가운데를 말해요</title>
    <link>https://jyukki97.github.io/2020-02-26-1655/</link>
    <pubDate>Wed, 26 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://jyukki97.github.io/2020-02-26-1655/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/1655
풀이: 하나씩 숫자를 받아온다.
첫번째 숫자를 mid 라고 할 때,
현재 숫자가 mid보다 크거나 같다면, 배열 r 에 작다면, 배열 l 에 저장한다.
mid를 배열 r 에 넣고, 배열 l 의 값 중 가장 큰 값으로 바꾼다.
만약, 배열 r과 l의 사이즈 차이가 2이상 난다면, mid값을 조정해준다.
cout, cin 을 사용하면, 시간초과가 나므로 주의하자. 코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  #include &lt;iostream&gt;#include &lt;queue&gt;using namespace std; int n, m, mid; int main() { priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; r; priority_queue&lt;int&gt; l; scanf(&#34;%d %d&#34;, &amp;n, &amp;mid); printf(&#34;%d\n&#34;, mid); while (--n) { scanf(&#34;%d&#34;, &amp;m); m &lt; mid ?]]></description>
</item><item>
    <title>[프로그래머스]라면공장</title>
    <link>https://jyukki97.github.io/2020-01-27-ramenfactory/</link>
    <pubDate>Mon, 27 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://jyukki97.github.io/2020-01-27-ramenfactory/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 라면 공장에서는 하루에 밀가루를 1톤씩 사용합니다. 원래 밀가루를 공급받던 공장의 고장으로 앞으로 k일 이후에야 밀가루를 공급받을 수 있기 때문에 해외 공장에서 밀가루를 수입해야 합니다.
해외 공장에서는 향후 밀가루를 공급할 수 있는 날짜와 수량을 알려주었고, 라면 공장에서는 운송비를 줄이기 위해 최소한의 횟수로 밀가루를 공급받고 싶습니다.
현재 공장에 남아있는 밀가루 수량 stock, 밀가루 공급 일정(dates)과 해당 시점에 공급 가능한 밀가루 수량(supplies), 원래 공장으로부터 공급받을 수 있는 시점 k가 주어질 때, 밀가루가 떨어지지 않고 공장을 운영하기 위해서 최소한 몇 번 해외 공장으로부터 밀가루를 공급받아야 하는지를 return 하도록 solution 함수를 완성하세요.]]></description>
</item><item>
    <title>[프로그래머스]더 맵게</title>
    <link>https://jyukki97.github.io/2020-01-19-morespicy/</link>
    <pubDate>Sun, 19 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://jyukki97.github.io/2020-01-19-morespicy/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다.
1  섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 스코빌 지수 * 2)   Leo는 모든 음식의 스코빌 지수가 K 이상이 될 때까지 반복하여 섞습니다.]]></description>
</item><item>
    <title>[프로그래머스]이중우선순위큐</title>
    <link>https://jyukki97.github.io/2020-01-04-priorityqueue/</link>
    <pubDate>Sat, 04 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://jyukki97.github.io/2020-01-04-priorityqueue/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.
   명령어 수신 탑(높이)     I 숫자 큐에 주어진 숫자를 삽입합니다.   D 1 큐에서 최댓값을 삭제합니다.   D -1 큐에서 최솟값을 삭제합니다.    이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때, 모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.]]></description>
</item></channel>
</rss>
