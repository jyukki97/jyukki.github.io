<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>우선순위큐 - Tag - JYUKKI&#39;s BLOG</title>
        <link>https://jyukki97.github.io/tags/%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%ED%81%90/</link>
        <description>우선순위큐 - Tag - JYUKKI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 26 Jun 2021 22:00:40 &#43;0800</lastBuildDate><atom:link href="https://jyukki97.github.io/tags/%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%ED%81%90/" rel="self" type="application/rss+xml" /><item>
    <title>[백준]11000 강의실 배정</title>
    <link>https://jyukki97.github.io/11000/</link>
    <pubDate>Sat, 26 Jun 2021 22:00:40 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/11000/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/11000
풀이: 그리디 문제이다.
강의 시간을 시작 시간 기준으로 정렬해 놓는다.
맨 처음 우선순위 큐에 0을 넣어놓는다.
강의 시작 시간이 제일 적은 것부터 우선순위 큐의 맨 앞의 값과 비교한다. 만약, 강의 시작 시간이 큐의 맨 앞의 값보다 크다면, 큐에서 pop해준다.
강의 끝나는 시간을 우선순위 큐에 pop 해준다.
이렇게 되면, 만약, 강의를 연달아 할 수 있다면, 강의실 개수(큐의 크기)는 유지되고, 연달아 할 수 없다면, 강의실 개수는 늘어나게 된다.
마지막으로 강의실 개수를 출력하고 끝낸다.]]></description>
</item><item>
    <title>[백준]7662 이중 우선순위 큐</title>
    <link>https://jyukki97.github.io/7662/</link>
    <pubDate>Fri, 25 Jun 2021 22:00:40 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/7662/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/7662
풀이: 우선순위 큐를 이용한 문제이다.
먼저, 우선순위 큐를 두개를 만든다.
만들어진 두 개의 우선순위 큐는 한 개는 오름차순, 한 개는 내림차순으로 정렬하여 사용한다.
다만 이 때, 하나의 우선순위 큐에서 하나의 변수를 삭제했을 때, 다른 우선순위 큐에서 이 변수가 삭제됬는지를 모르므로, Visit 변수를 두어 이 변수가 삭제됐음을 알 수 있게 해준다.
&lsquo;D 1&rsquo; 이 입력되어 최댓값을 삭제해야 하는 경우에는 오름차순에서,
&lsquo;D -1&rsquo;이 입력되어 최솟값을 삭제해야 하는 경우에는 내림차순에서 삭제한다.
이때, 삭제되었음을 visit변수에 나타내준다.]]></description>
</item></channel>
</rss>
