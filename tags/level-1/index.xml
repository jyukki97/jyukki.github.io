<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Level 1 - Tag - JYUKKI&#39;s BLOG</title>
        <link>https://jyukki97.github.io/tags/level-1/</link>
        <description>Level 1 - Tag - JYUKKI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 11 Feb 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://jyukki97.github.io/tags/level-1/" rel="self" type="application/rss+xml" /><item>
    <title>[프로그래머스]다트 게임</title>
    <link>https://jyukki97.github.io/2020-02-11-dartgame/</link>
    <pubDate>Tue, 11 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-02-11-dartgame/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다. 다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는 게임으로, 모두가 간단히 즐길 수 있다. 갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다.
 다트 게임은 총 3번의 기회로 구성된다. 각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다. 점수와 함께 Single(S), Double(D), Triple(T) 영역이 존재하고 각 영역 당첨 시 점수에서 1제곱, 2제곱, 3제곱 (점수1 , 점수2 , 점수3 )으로 계산된다.]]></description>
</item><item>
    <title>[프로그래머스]문자열 내 마음대로 정렬하기</title>
    <link>https://jyukki97.github.io/2020-02-10-stringsort/</link>
    <pubDate>Mon, 10 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-02-10-stringsort/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 예를 들어 strings가 [sun, bed, car]이고 n이 1이면 각 단어의 인덱스 1의 문자 u, e, a로 strings를 정렬합니다.
풀이: n번째 글자를 기준으로 오름차순 정렬을 한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14  #include &lt;string&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std; vector&lt;string&gt; solution(vector&lt;string&gt; strings, int n) { vector&lt;string&gt; answer; for (int i = 0; i &lt; strings.]]></description>
</item><item>
    <title>[프로그래머스]제일 작은 수 제거하기</title>
    <link>https://jyukki97.github.io/2020-01-26-removeminnum/</link>
    <pubDate>Sun, 26 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-26-removeminnum/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.
풀이: arr에서 제일 작은 수를 찾아 삭제한다.
만약 arr이 비었다면 -1을 넣는다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #include &lt;string&gt;#include &lt;vector&gt;using namespace std; vector&lt;int&gt; solution(vector&lt;int&gt; arr) { int min = arr[0], c = 0; for(int i = 1; i &lt; arr.]]></description>
</item><item>
    <title>[프로그래머스]직사각형 별찍기</title>
    <link>https://jyukki97.github.io/2020-01-25-ractanglestar/</link>
    <pubDate>Sat, 25 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-25-ractanglestar/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다. 별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요.
풀이: n번 별을 찍는다. 개행한다.
그것을 m번 반복한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  #include &lt;iostream&gt; using namespace std; int main(void) { int a, b; cin &gt;&gt; a &gt;&gt; b; for (int i = 0; i &lt; b; i++){ for (int t = 0; t &lt; a; t++){ cout &lt;&lt; &#39;*&#39;; } cout &lt;&lt; endl; } return 0; }   ]]></description>
</item><item>
    <title>[프로그래머스]정수 내림차순으로 배치하기</title>
    <link>https://jyukki97.github.io/2020-01-24-integersort/</link>
    <pubDate>Fri, 24 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-24-integersort/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.
풀이: 정수 n을 string 에 담는다.
담아진 string 을 내림차순으로 정렬한다.
string을 long long 값으로 변환 후 리턴한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10  #include &lt;string&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std; long long solution(long long n) { string a = to_string(n); sort(a.]]></description>
</item><item>
    <title>[프로그래머스]행렬의 덧셈</title>
    <link>https://jyukki97.github.io/2020-01-22-matrixsum/</link>
    <pubDate>Wed, 22 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-22-matrixsum/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.
풀이: 각 행렬의 같은 행 같은 열을 더한 행렬을 출력한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11  #include &lt;string&gt;#include &lt;vector&gt; using namespace std; vector&lt;vector&lt;int&gt;&gt; solution(vector&lt;vector&lt;int&gt;&gt; arr1, vector&lt;vector&lt;int&gt;&gt; arr2) { for (int i = 0; i &lt; arr1.]]></description>
</item><item>
    <title>[프로그래머스]문자열 내림차순으로 배치하기</title>
    <link>https://jyukki97.github.io/2020-01-14-stringdescendingsort/</link>
    <pubDate>Tue, 14 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-14-stringdescendingsort/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 문자열 s에 나타나는 문자를 큰것부터 작은 순으로 정렬해 새로운 문자열을 리턴하는 함수, solution을 완성해주세요. s는 영문 대소문자로만 구성되어 있으며, 대문자는 소문자보다 작은 것으로 간주합니다.
풀이: 주어진 문자열을 내림차순으로 정렬한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9  #include &lt;string&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std; string solution(string s) { sort(s.begin(), s.end(), greater&lt;char&gt;()); return s; }   ]]></description>
</item><item>
    <title>[프로그래머스]모의고사</title>
    <link>https://jyukki97.github.io/2020-01-13-mocktest/</link>
    <pubDate>Mon, 13 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-13-mocktest/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.
1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, &hellip; 2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, &hellip; 3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, &hellip;]]></description>
</item><item>
    <title>[프로그래머스]x만큼 간격이 있는 n개의 숫자</title>
    <link>https://jyukki97.github.io/2020-01-03-xgapnnum/</link>
    <pubDate>Fri, 03 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-03-xgapnnum/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.
풀이: x * 1, x *2&hellip;., x * n 을 리턴한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11  #include &lt;string&gt;#include &lt;vector&gt; using namespace std; vector&lt;long long&gt; solution(int x, int n) { vector&lt;long long&gt; answer; for (int i = 1;i &lt;= n;i++) answer.]]></description>
</item><item>
    <title>[프로그래머스]비밀지도</title>
    <link>https://jyukki97.github.io/2020-01-03-secretmap/</link>
    <pubDate>Fri, 03 Jan 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.github.io/2020-01-03-secretmap/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 비밀지도 네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.
 지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 공백(&quot; ) 또는벽(#&quot;) 두 종류로 이루어져 있다. 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다.]]></description>
</item></channel>
</rss>
