<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>백트래킹 - Tag - JYUKKI&#39;s BLOG</title>
        <link>https://jyukki97.io/tags/%EB%B0%B1%ED%8A%B8%EB%9E%98%ED%82%B9/</link>
        <description>백트래킹 - Tag - JYUKKI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 23 Apr 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://jyukki97.io/tags/%EB%B0%B1%ED%8A%B8%EB%9E%98%ED%82%B9/" rel="self" type="application/rss+xml" /><item>
    <title>[백준]17265 나의 인생에는 수학과 함께</title>
    <link>https://jyukki97.io/2020-04-23-17265/</link>
    <pubDate>Thu, 23 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-04-23-17265/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/17265
풀이: 최단 거리이므로 오른쪽과 아래쪽으로만 이동한다.
현재 위치가 연산자라면,
이전까지 연산해왔던 값을 x라고 하자
연잔자를 ㅁ 라고 하고,
다음 이동할 곳의 숫자를 y라고 하자.
현재 위치의 연산자를 이용하여 x ㅁ y 를 연산한 후 다음 숫자로 이동한다.
현재 위치가 숫자라면, 현재 위치가 학교인지 판단 후
학교가 아니라면 오른쪽 또는 아래로 이동한다.
학교라면 현재까지 연산해왔던 값이 지금 저장해 놓은 최댓값보다 크다면 교체한다.
또한 현재까지 연산해왔던 값이 지금 저장해 놓은 최솟값보다 작다면 교체한다.]]></description>
</item><item>
    <title>[백준]1759 암호 만들기</title>
    <link>https://jyukki97.io/2020-04-22-1759/</link>
    <pubDate>Wed, 22 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-04-22-1759/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/1759
풀이: C개의 문자들을 사전순으로 정렬한다.
정렬된 문자열을 L개만큼 출력한다.
단, 최소 한 개의 모음과 두개의 자음이 있어야한다.
증가하는 순서로 있어야한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std; int n, m, i, b[20]; char c[20], d[20]; void P(int x, int z) { if (x == n) { int y = 0, t = 0, r = 0; for (; y &lt; x; y++) if (d[y] == &#39;a&#39; || d[y] == &#39;e&#39; || d[y] == &#39;i&#39; || d[y] == &#39;o&#39; || d[y] == &#39;u&#39;)	t++; else r++; if(t &amp;&amp; r&gt;1)	cout &lt;&lt; d &lt;&lt; endl; return; } for (int y = z; y &lt; m; y++)	if (!]]></description>
</item><item>
    <title>[백준]9663 N-Queen</title>
    <link>https://jyukki97.io/2020-02-23-9663/</link>
    <pubDate>Sun, 23 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-23-9663/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/9663
풀이: https://jyukki97.github.io/blog/2020-02-23-nqueen/ 을 참고
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  #include &lt;iostream&gt;using namespace std; bool visit[16][16]; int n, sum = 0; bool po(int a, int b) { for (int i = 1; i &lt;= a || i &lt;= b; i++) { if ((a - i &gt;= 0 &amp;&amp; b - i &gt;= 0 &amp;&amp; visit[a - i][b - i]) || (a - i &gt;= 0 &amp;&amp; b + i &lt; n &amp;&amp; visit[a - i][b + i]) || (a - i &gt;= 0 &amp;&amp; visit[a - i][b]))	return false; } return true; } void nq(int a) { for (int i = 0; i &lt; n; i++) { if (po(a, i)) { if (a == n - 1)	sum++; else { visit[a][i] = true; nq(a + 1); visit[a][i] = false; } } } } int main() { cin &gt;&gt; n; nq(0); cout &lt;&lt; sum &lt;&lt; endl; return 0; }   ]]></description>
</item></channel>
</rss>
