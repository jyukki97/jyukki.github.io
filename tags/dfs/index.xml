<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>DFS - Tag - JYUKKI&#39;s BLOG</title>
        <link>https://jyukki97.io/tags/dfs/</link>
        <description>DFS - Tag - JYUKKI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 14 Mar 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://jyukki97.io/tags/dfs/" rel="self" type="application/rss+xml" /><item>
    <title>[백준]2583 영역 구하기</title>
    <link>https://jyukki97.io/2020-03-14-2583/</link>
    <pubDate>Sat, 14 Mar 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-03-14-2583/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/2583
풀이: 직사각형이 들어있는 곳을 1,
없는곳을 0으로 해놓은 배열을 만든다.
배열을 순회하며, 현재 값이 0 이라면, 영역의 개수를 +1 해주고,
연결된 모든 영역을 순회하여 1로 바꿔주고, 영역의 넓이를 배열에 저장한다.
배열의 모든 숫자가 1이라면,
영역의 개수를 출력하고,
각 영역의 넓이를 오름차순으로 출력한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std; int n, m, k, i, t, a[102][102], x1, x2, yl, y2, s = 0, b[5002]; void A(int x, int y) { a[x][y] = 1, b[s - 1]++; if (x &gt; 0 &amp;&amp; !]]></description>
</item><item>
    <title>[백준]2468 안전 영역</title>
    <link>https://jyukki97.io/2020-03-13-2468/</link>
    <pubDate>Fri, 13 Mar 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-03-13-2468/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/2468
풀이: 물의 높이가 h 일 때,
지역의 높이가 h보다 작거나 같다면 잠겨있는 지역이라고 한다.
모든 지역을 순회하며,
현재 지역이 잠겨있지 않다면, 방문 표시를 해두고,
왼쪽, 오른쪽, 위, 아래 에 잠겨있지 않은 곳을 순회하며 방문표시를 한다.
연결된 모든 곳을 방문했다면, 안전한 영역을 +1 해준다.
물의 높이를 0 ~ (지역 중 최대 높이) 까지 순회한 후
안전한 영역의 최대치를 출력한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  #include &lt;iostream&gt;#define F(i,n)for(int i=0;i&lt;n;i++) using namespace std; int n, m = 0, a[102][102], b[102][102], s, r = 0; void A(int x, int y) { b[x][y] = 0; if (x &gt; 0 &amp;&amp; b[x - 1][y])	A(x - 1, y); if (y &gt; 0 &amp;&amp; b[x][y - 1])	A(x, y - 1); if (x + 1 &lt; n &amp;&amp; b[x + 1][y])	A(x + 1, y); if (y + 1 &lt; n &amp;&amp; b[x][y + 1])	A(x, y + 1); } int main() { cin &gt;&gt; n; F(i,n)F(t,n){ cin &gt;&gt; a[i][t]; m = m &lt; a[i][t] ?]]></description>
</item><item>
    <title>[백준]11724 연결 요소의 개수</title>
    <link>https://jyukki97.io/2020-03-12-11724/</link>
    <pubDate>Thu, 12 Mar 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-03-12-11724/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/11724
풀이: 방문하지 않은 정점과 연결된 모든 정점을 방문표시하고, 요소의 개수를 +1 해준다.
더이상 방문할 정점이 없을때까지 반복한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #include &lt;iostream&gt;#include &lt;vector&gt;using namespace std; int n, m, i, t, c = 0, b[1002]; vector&lt;vector&lt;int&gt;&gt; a; void T(int x) { if (b[x]) return; b[x] = 1; for (int o : a[x])	T(o); } int main() { cin &gt;&gt; n &gt;&gt; m; a.]]></description>
</item><item>
    <title>[백준]7569 토마토</title>
    <link>https://jyukki97.io/2020-02-29-7569/</link>
    <pubDate>Sat, 29 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-29-7569/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/7569
풀이: [백준]7576 토마토 참고
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  #include &lt;iostream&gt;#include &lt;queue&gt;using namespace std; int n, m, h, k, q, w, e, a[102][102][102]; queue&lt;pair&lt;int, pair&lt;int, int&gt;&gt;&gt; dp2; int main() { cin &gt;&gt; m &gt;&gt; n &gt;&gt; h; for (int y = 0; y &lt; h; y++) for (int i = 0; i &lt; n; i++) for (int t = 0; t &lt; m; t++) { cin &gt;&gt; a[y][i][t]; if (a[y][i][t] == 1)	dp2.]]></description>
</item><item>
    <title>[백준]1012 유기농 배추</title>
    <link>https://jyukki97.io/2020-02-28-1012/</link>
    <pubDate>Fri, 28 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-28-1012/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/1012
풀이: [백준]2667 단지번호붙이기 참고
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  #include &lt;iostream&gt;#include &lt;string.h&gt;using namespace std; int n, T, m, k, q, w, sum, a[52][52]; bool b[52][52]; void num(int x, int y) { b[x][y] = true; if (x + 1 &lt; n &amp;&amp; a[x + 1][y] &amp;&amp; !]]></description>
</item><item>
    <title>[백준]2178 미로 탐색</title>
    <link>https://jyukki97.io/2020-02-28-2178/</link>
    <pubDate>Fri, 28 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-28-2178/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/2178
풀이: 이동횟수가 i 일때,
이동횟수가 i - 1 인 값들에서 왼쪽, 오른쪽, 위, 아래 중 값이 1이고, 방문한적 없는 곳을 찾아 좌표를 큐에 넣는다.
만약 현재 좌표가 도착위치라면, 이동횟수 i를 출력한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  #include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;queue&gt;using namespace std; int n, m, k, q, w; vector&lt;string&gt; a; queue&lt;pair&lt;int, int&gt;&gt; dp2; bool b[102][102]; int main() { cin &gt;&gt; n &gt;&gt; m; a.]]></description>
</item><item>
    <title>[백준]7576 토마토</title>
    <link>https://jyukki97.io/2020-02-28-7576/</link>
    <pubDate>Fri, 28 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-28-7576/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/7576
풀이: [백준]2178 미로 탐색 참고
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  #include &lt;iostream&gt;#include &lt;queue&gt;using namespace std; int n, m, k, q, w, a[1002][1002]; queue&lt;pair&lt;int, int&gt;&gt; dp2; int main() { cin &gt;&gt; m &gt;&gt; n; for (int i = 0; i &lt; n; i++) for (int t = 0; t &lt; m; t++) { cin &gt;&gt; a[i][t]; if (a[i][t] == 1)	dp2.]]></description>
</item><item>
    <title>[백준]1260 DFS와 BFS</title>
    <link>https://jyukki97.io/2020-02-27-1260/</link>
    <pubDate>Thu, 27 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-27-1260/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/1260
풀이: DFS 와 BFS를 출력한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  #include &lt;iostream&gt;#include &lt;queue&gt;#include &lt;string.h&gt;using namespace std; int n, m, v, q, w, a[1002][1002] = {}; bool b[1002]; void dfs(int x) { b[x] = true; cout &lt;&lt; x &lt;&lt; &#34; &#34;; for (int i = 1; i &lt;= n; i++) if (a[x][i] &amp;&amp; !]]></description>
</item><item>
    <title>[백준]2667 단지번호붙이기</title>
    <link>https://jyukki97.io/2020-02-27-2667/</link>
    <pubDate>Thu, 27 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-27-2667/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/2667
풀이: 전체를 순회한다.
만약 집이있는 곳 ( 배열에 1인 곳 ) 을 찾았다면, 연결된 모든 단지를 찾아 단지 크기를 배열에 저장한다.
순회가 끝났다면, 배열의 사이즈 (총 단지수) 를 출력한다.
그 후 단지내 집의 수를 오름차순으로 정렬하여 출력하여야하므로
배열을 정렬한 후 배열의 원소를 출력한다.
코드: 사용언어 : c++
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  #include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;string&gt;#include &lt;algorithm&gt;using namespace std; int n; bool b[26][26]; vector&lt;string&gt; a; vector&lt;int&gt; c; void num(int x, int y) { b[x][y] = true; c.]]></description>
</item><item>
    <title>[프로그래머스]단어 변환</title>
    <link>https://jyukki97.io/2020-02-17-wordtranslation/</link>
    <pubDate>Mon, 17 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2020-02-17-wordtranslation/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 두 개의 단어 begin, target과 단어의 집합 words가 있습니다. 아래와 같은 규칙을 이용하여 begin에서 target으로 변환하는 가장 짧은 변환 과정을 찾으려고 합니다.
1 2  1. 한 번에 한 개의 알파벳만 바꿀 수 있습니다. 2. words에 있는 단어로만 변환할 수 있습니다.   예를 들어 begin이 hit, target가 cog, words가 [hot,dot,dog,lot,log,cog]라면 hit -&gt; hot -&gt; dot -&gt; dog -&gt; cog와 같이 4단계를 거쳐 변환할 수 있습니다.
두 개의 단어 begin, target과 단어의 집합 words가 매개변수로 주어질 때, 최소 몇 단계의 과정을 거쳐 begin을 target으로 변환할 수 있는지 return 하도록 solution 함수를 작성해주세요.]]></description>
</item></channel>
</rss>
