<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>조합론 - Tag - JYUKKI&#39;s BLOG</title>
        <link>https://jyukki97.io/tags/%EC%A1%B0%ED%95%A9%EB%A1%A0/</link>
        <description>조합론 - Tag - JYUKKI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 10 Jan 2018 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://jyukki97.io/tags/%EC%A1%B0%ED%95%A9%EB%A1%A0/" rel="self" type="application/rss+xml" /><item>
    <title>[백준]3908 서로 다른 소수의 합</title>
    <link>https://jyukki97.io/2018-01-10-3908/</link>
    <pubDate>Wed, 10 Jan 2018 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://jyukki97.io/2018-01-10-3908/</guid>
    <description><![CDATA[https://www.acmicpc.net/problem/3908
풀이:  소수를 찾는다. 소수를 하나씩 추가해가면서 a[n][k]를 찾는다. a[n][k] : 양의 정수 n을 서로 다른 k개의 소수의 합으로 나타낼 수 있는 최대의 경우의 수  코드: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  #include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;math.h&gt;#include &lt;string.h&gt;using namespace std; int	T, n, k, a[1122][16] = { 0 }; bool isprime[1122]; vector&lt;int&gt; b; int prime() { memset(isprime, 1, sizeof(isprime)); isprime[0] = isprime[1] = false; for (int i = 2; i &lt; sqrt(1122); i++) if(isprime[i]) for (int t = i * i; t &lt; 1122; t += i) isprime[t] = false; for (int i = 2; i &lt; 1122; i++) if (isprime[i]) b.]]></description>
</item></channel>
</rss>
