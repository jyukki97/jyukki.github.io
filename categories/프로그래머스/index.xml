<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>프로그래머스 - Category - JYUKKI&#39;s BLOG</title>
        <link>http://jyukki97.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/</link>
        <description>프로그래머스 - Category - JYUKKI&#39;s BLOG</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 14 Mar 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://jyukki97.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/" rel="self" type="application/rss+xml" /><item>
    <title>[프로그래머스]카카오프렌즈 컬러링북</title>
    <link>http://jyukki97.github.io/2020-03-14-coloringbook/</link>
    <pubDate>Sat, 14 Mar 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-03-14-coloringbook/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 카카오 프렌즈 컬러링북 출판사의 편집자인 어피치는 네오에게 컬러링북에 들어갈 원화를 그려달라고 부탁하여 여러 장의 그림을 받았다. 여러 장의 그림을 난이도 순으로 컬러링북에 넣고 싶었던 어피치는 영역이 많으면 색칠하기가 까다로워 어려워진다는 사실을 발견하고 그림의 난이도를 영역의 수로 정의하였다. (영역이란 상하좌우로 연결된 같은 색상의 공간을 의미한다.)
그림에 몇 개의 영역이 있는지와 가장 큰 영역의 넓이는 얼마인지 계산하는 프로그램을 작성해보자.
위의 그림은 총 12개 영역으로 이루어져 있으며, 가장 넓은 영역은 어피치의 얼굴면으로 넓이는 120이다.]]></description>
</item><item>
    <title>[프로그래머스]예상 대진표</title>
    <link>http://jyukki97.github.io/2020-03-04-listofmatches/</link>
    <pubDate>Wed, 04 Mar 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-03-04-listofmatches/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: △△ 게임대회가 개최되었습니다. 이 대회는 N명이 참가하고, 토너먼트 형식으로 진행됩니다. N명의 참가자는 각각 1부터 N번을 차례대로 배정받습니다. 그리고, 1번↔2번, 3번↔4번, &hellip; , N-1번↔N번의 참가자끼리 게임을 진행합니다. 각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있습니다. 이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받습니다. 만약 1번↔2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고, 3번↔4번에서 겨루는 게임에서 3번이 승리했다면 다음 라운드에서 2번을 부여받게 됩니다. 게임은 최종 한 명이 남을 때까지 진행됩니다.]]></description>
</item><item>
    <title>[프로그래머스]가장 먼 노드</title>
    <link>http://jyukki97.github.io/2020-03-01-furthestnode/</link>
    <pubDate>Sun, 01 Mar 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-03-01-furthestnode/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: n개의 노드가 있는 그래프가 있습니다. 각 노드는 1부터 n까지 번호가 적혀있습니다. 1번 노드에서 가장 멀리 떨어진 노드의 갯수를 구하려고 합니다. 가장 멀리 떨어진 노드란 최단경로로 이동했을 때 간선의 개수가 가장 많은 노드들을 의미합니다.
노드의 개수 n, 간선에 대한 정보가 담긴 2차원 배열 vertex가 매개변수로 주어질 때, 1번 노드로부터 가장 멀리 떨어진 노드가 몇 개인지를 return 하도록 solution 함수를 작성해주세요.
풀이: 현재 위치를 i 라고 하자.
이때까지 방문을 한적이 없고, i와의 거리가 1차이나는 노드를 배열에 저장한 후 visit을 true로 바꿔준다.]]></description>
</item><item>
    <title>[프로그래머스]최적의 행렬 곱셈</title>
    <link>http://jyukki97.github.io/2020-02-26-matrix/</link>
    <pubDate>Wed, 26 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-02-26-matrix/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 크기가 a by b인 행렬과 크기가 b by c 인 행렬이 있을 때, 두 행렬을 곱하기 위해서는 총 a x b x c 번 곱셈해야합니다. 예를 들어서 크기가 5 by 3인 행렬과 크기가 3 by 2인 행렬을 곱할때는 총 5 x 3 x 2 = 30번의 곱하기 연산을 해야 합니다.
행렬이 2개일 때는 연산 횟수가 일정 하지만, 행렬의 개수가 3개 이상일 때는 연산의 순서에 따라서 곱하기 연산의 횟수가 바뀔 수 있습니다.]]></description>
</item><item>
    <title>[프로그래머스]N-Queen</title>
    <link>http://jyukki97.github.io/2020-02-23-nqueen/</link>
    <pubDate>Sun, 23 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-02-23-nqueen/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 가로, 세로 길이가 n인 정사각형으로된 체스판이 있습니다. 체스판 위의 n개의 퀸이 서로를 공격할 수 없도록 배치하고 싶습니다.
예를 들어서 n이 4인경우 다음과 같이 퀸을 배치하면 n개의 퀸은 서로를 한번에 공격 할 수 없습니다.
체스판의 가로 세로의 세로의 길이 n이 매개변수로 주어질 때, n개의 퀸이 조건에 만족 하도록 배치할 수 있는 방법의 수를 return하는 solution함수를 완성해주세요.
풀이: 첫번째 줄부터 n번째 줄까지 퀸을 하나 씩 놓을 수 있다.
i번째 줄에 0 ~ n까지 퀸을 놓는다고 할 때,]]></description>
</item><item>
    <title>[프로그래머스]하노이의 탑</title>
    <link>http://jyukki97.github.io/2020-02-18-towerofhanoi/</link>
    <pubDate>Tue, 18 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-02-18-towerofhanoi/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 하노이 탑(Tower of Hanoi)은 퍼즐의 일종입니다. 세 개의 기둥과 이 기동에 꽂을 수 있는 크기가 다양한 원판들이 있고, 퍼즐을 시작하기 전에는 한 기둥에 원판들이 작은 것이 위에 있도록 순서대로 쌓여 있습니다. 게임의 목적은 다음 두 가지 조건을 만족시키면서, 한 기둥에 꽂힌 원판들을 그 순서 그대로 다른 기둥으로 옮겨서 다시 쌓는 것입니다.
 한 번에 하나의 원판만 옮길 수 있습니다. 큰 원판이 작은 원판 위에 있어서는 안됩니다.  하노이 탑의 세 개의 기둥을 왼쪽 부터 1번, 2번, 3번이라고 하겠습니다.]]></description>
</item><item>
    <title>[프로그래머스]단어 변환</title>
    <link>http://jyukki97.github.io/2020-02-17-wordtranslation/</link>
    <pubDate>Mon, 17 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-02-17-wordtranslation/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 두 개의 단어 begin, target과 단어의 집합 words가 있습니다. 아래와 같은 규칙을 이용하여 begin에서 target으로 변환하는 가장 짧은 변환 과정을 찾으려고 합니다.
1 2  1. 한 번에 한 개의 알파벳만 바꿀 수 있습니다. 2. words에 있는 단어로만 변환할 수 있습니다.   예를 들어 begin이 hit, target가 cog, words가 [hot,dot,dog,lot,log,cog]라면 hit -&gt; hot -&gt; dot -&gt; dog -&gt; cog와 같이 4단계를 거쳐 변환할 수 있습니다.
두 개의 단어 begin, target과 단어의 집합 words가 매개변수로 주어질 때, 최소 몇 단계의 과정을 거쳐 begin을 target으로 변환할 수 있는지 return 하도록 solution 함수를 작성해주세요.]]></description>
</item><item>
    <title>[프로그래머스]입국심사</title>
    <link>http://jyukki97.github.io/2020-02-16-immigration/</link>
    <pubDate>Sun, 16 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-02-16-immigration/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: n명이 입국심사를 위해 줄을 서서 기다리고 있습니다. 각 입국심사대에 있는 심사관마다 심사하는데 걸리는 시간은 다릅니다.
처음에 모든 심사대는 비어있습니다. 한 심사대에서는 동시에 한 명만 심사를 할 수 있습니다. 가장 앞에 서 있는 사람은 비어 있는 심사대로 가서 심사를 받을 수 있습니다. 하지만 더 빨리 끝나는 심사대가 있으면 기다렸다가 그곳으로 가서 심사를 받을 수도 있습니다.
모든 사람이 심사를 받는데 걸리는 시간을 최소로 하고 싶습니다.
입국심사를 기다리는 사람 수 n, 각 심사관이 한 명을 심사하는데 걸리는 시간이 담긴 배열 times가 매개변수로 주어질 때, 모든 사람이 심사를 받는데 걸리는 시간의 최솟값을 return 하도록 solution 함수를 작성해주세요.]]></description>
</item><item>
    <title>[프로그래머스]조이스틱</title>
    <link>http://jyukki97.github.io/2020-02-15-joystick/</link>
    <pubDate>Sat, 15 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-02-15-joystick/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 조이스틱으로 알파벳 이름을 완성하세요. 맨 처음엔 A로만 이루어져 있습니다. ex) 완성해야 하는 이름이 세 글자면 AAA, 네 글자면 AAAA
조이스틱을 각 방향으로 움직이면 아래와 같습니다.
1 2 3 4  ▲ - 다음 알파벳 ▼ - 이전 알파벳 (A에서 아래쪽으로 이동하면 Z로) ◀ - 커서를 왼쪽으로 이동 (첫 번째 위치에서 왼쪽으로 이동하면 마지막 문자에 커서) ▶ - 커서를 오른쪽으로 이동   예를 들어 아래의 방법으로 JAZ를 만들 수 있습니다.]]></description>
</item><item>
    <title>[프로그래머스]구명보트</title>
    <link>http://jyukki97.github.io/2020-02-14-lifeboat/</link>
    <pubDate>Fri, 14 Feb 2020 00:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://jyukki97.github.io/2020-02-14-lifeboat/</guid>
    <description><![CDATA[https://programmers.co.kr
문제: 무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다.
예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은 같이 탈 수 있지만 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게 제한을 초과하여 같이 탈 수 없습니다.
구명보트를 최대한 적게 사용하여 모든 사람을 구출하려고 합니다.
사람들의 몸무게를 담은 배열 people과 구명보트의 무게 제한 limit가 매개변수로 주어질 때, 모든 사람을 구출하기 위해 필요한 구명보트 개수의 최솟값을 return 하도록 solution 함수를 작성해주세요.]]></description>
</item></channel>
</rss>
